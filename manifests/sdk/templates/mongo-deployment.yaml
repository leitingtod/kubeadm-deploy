apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-mongo
  labels:
    app: {{ .Release.Name }}-mongo
    chart: {{ template "sdk.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  type: {{ .Values.mongo.service.type }}
  ports:
    - name: mongo-tcp
      port: {{ .Values.mongo.service.port }}
      targetPort: {{ .Values.mongo.containerPort }}
    - name: console-http
      port: {{ .Values.mongoadmin.service.port }}
      targetPort: {{ .Values.mongoadmin.containerPort }}
  selector:
    app: {{ .Release.Name }}-mongo
    release: {{ .Release.Name }}

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mongo
  labels:
    app: {{ .Release.Name }}-mongo
    chart: {{ template "sdk.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.mongo.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-mongo
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-mongo
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: mongo
          image: "{{ .Values.mongo.image }}:{{ .Values.mongo.imageTag }}"
          imagePullPolicy: {{ .Values.mongo.pullPolicy }}

          ports:
          - containerPort: {{ .Values.mongo.containerPort }}

        {{- if .Values.sdk }}
          env:
          - name: AUTH
            value: "no"
          - name: MONGODB_ADMIN_USER
            value: {{ .Values.php.env.mongo.default.user | quote }}
          - name: MONGODB_ADMIN_PASS
            value: {{ .Values.php.env.mongo.default.pass | quote }}
          - name: MONGODB_APPLICATION_DATABASE
            value: {{ .Values.php.env.mongo.default.dbname | quote }}
          - name: MONGODB_APPLICATION_USER
            value: {{ .Values.php.env.mongo.default.user | quote }}
          - name: MONGODB_APPLICATION_PASS
            value: {{ .Values.php.env.mongo.default.pass | quote }}
        {{- end}}

          resources:
{{ toYaml .Values.mongo.resources | indent 12 }}

        - name: console
          image: "{{ .Values.mongoadmin.image }}:{{ .Values.mongoadmin.imageTag }}"
          imagePullPolicy: {{ .Values.mongoadmin.pullPolicy }}

          ports:
          - containerPort: {{ .Values.mongoadmin.containerPort }}

          env:
          - name: ME_CONFIG_MONGODB_SERVER
            value: {{ .Release.Name }}-mongo

          resources:
{{ toYaml .Values.mongoadmin.resources | indent 12 }}
          volumeMounts:
            - name: data
              mountPath: "/data"

      volumes:
      {{- if .Values.persistence.volumes }}
{{ toYaml .Values.persistence.volumes | indent 6 }}
      {{- end }}
      # data
      - name: data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default default printf "%s-%s" .Release.Name "mongo" }}
      {{- else }}
        emptyDir: {}
      {{ end }}

    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 6 }}
    {{- end }}

    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}

    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}

    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
