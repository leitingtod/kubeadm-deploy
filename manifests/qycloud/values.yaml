# Default values for qycloud.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets:
- name: harbor-registry-secret

frontend:
  replicaCount: 1
  nginx:
    image: "dockerhub.aysaas.com/library/aysaas/nginx"
    imageTag: "1.13.7-alpine-2.1.0"
    pullPolicy: Always
    containerPort: 80

  php:
    image: "dockerhub.aysaas.com/library/aysaas/php"
    imageTag: "7.1-ubuntu14.04-2.1.0"
    pullPolicy: Always
    containerPort: 9000
    env:
      mongoAppDBName: master
      mongoAppUser: master
      mongoAppPass: L9jD7srDBdS7Nfob

      mysqlAppDBName: master
      mysqlAppUser: master
      mysqlAppPass: pZdxysqJX4bK4VrB

      snycSource: false
      saasBranch: master
      orgBranch: master
      nodeSaasBranch: master

      verbose: ""
      forceBuild: ""

  node:
    containerPort: 5000

  portal:
    containerPort: 5001

  source:
    image: "dockerhub.aysaas.com/library/aysaas/saas"
    imageTag: "2.1.0-hotfix-release-0613ca22b8"
    pullPolicy: Always
    update: "false"

  service:
    type: ClusterIP
    port: 80
    # If defined, user can access from internet by any port except 80
    #externalPort: 8040

  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: "500m"
      memory: "1512Mi"

beanstalkd:
  replicaCount: 1
  image: "dockerhub.aysaas.com/library/aysaas/beanstalkd"
  imageTag: "1.10-alpine-1.0.0"
  pullPolicy: Always
  containerPort: 11300
  service:
    type: ClusterIP
    port: 11300

rabbitmq:
  enabled: false
  replicaCount: 1
  image: "dockerhub.aysaas.com/library/rabbitmq"
  imageTag: "3.7.4-management"
  pullPolicy: Always
  env:
    user: anyuan
    pass: anyuan
  service:
    type: ClusterIP
    port: 5672

mongo:
  replicaCount: 1
  image: "dockerhub.aysaas.com/library/aysaas/mongo"
  imageTag: "test"
  pullPolicy: Always
  containerPort: 27017
  service:
    type: ClusterIP
    port: 27017
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: "500m"
      memory: "512Mi"

mysql:
  replicaCount: 1
  image: "dockerhub.aysaas.com/library/aysaas/mysql"
  imageTag: "test"
  pullPolicy: Always
  containerPort: 3306
  service:
    type: ClusterIP
    port: 3306
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: "500m"
      memory: "1512Mi"

redis:
  replicaCount: 1
  image: "dockerhub.aysaas.com/library/aysaas/redis"
  imageTag: "4.0.6-alpine-1.0.0"
  pullPolicy: Always
  containerPort: 6379
  service:
    type: ClusterIP
    port: 6379

persistence:
  enabled: false
   # If defined, PVC must be created manually before volume will be bound
#  existingClaim: "saas-saas"

  accessMode: ReadWriteMany
  size: 8Gi
  storageClass: "aysaas-nfs-once"


ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  domain: default.com
  hosts:
    master: www
    static: static
    fileio: fileio
    nodesaas: nodestatic
    xhprof: xhprof
    beanstalk: beanstalk
    rabbitmq: rabbitmq
    mysql: mysql
    redis: redis
    portal: portal

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}
