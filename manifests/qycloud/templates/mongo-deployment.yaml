apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-mongo
  labels:
    app: {{ .Release.Name }}-mongo
    chart: {{ template "qycloud.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  type: {{ .Values.mongo.service.type }}
  ports:
    - port: {{ .Values.mongo.service.port }}
      targetPort: {{ .Values.mongo.service.port }}
  selector:
    app: {{ .Release.Name }}-mongo
    release: {{ .Release.Name }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mongo
  labels:
    app: {{ .Release.Name }}-mongo
    chart: {{ template "qycloud.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.mongo.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-mongo
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-mongo
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: mongo
          image: "{{ .Values.mongo.image }}:{{ .Values.mongo.imageTag }}"
          imagePullPolicy: {{ .Values.mongo.pullPolicy }}
          ports:
          - containerPort: {{ .Values.mongo.containerPort }}
          env:
            - name: AUTH
              value: {{ .Values.mongo.env.auth | quote }}
            - name: MONGODB_ADMIN_PASS
              value: {{ .Values.mongo.env.adminPassword }}
            - name: MONGODB_ADMIN_USER
              value: {{ .Values.mongo.env.adminUser }}
            - name: MONGODB_APPLICATION_DATABASE
              value: {{ .Values.mongo.env.appDatabase }}
            - name: MONGODB_APPLICATION_PASS
              value: {{ .Values.mongo.env.appDatabasePassword }}
            - name: MONGODB_APPLICATION_USER
              value: {{ .Values.mongo.env.appDatabaseUser }}
          resources:
{{ toYaml .Values.mongo.resources | indent 12 }}
          volumeMounts:
            - name: saas-home
              mountPath: "/data"
              subPath: "data/mongo"
      volumes:
{{- if .Values.persistence.volumes }}
{{ toYaml .Values.persistence.volumes | indent 6 }}
{{- end }}
      - name: saas-home
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default .Release.Name }}
      {{- else }}
        emptyDir: {}
      {{- end -}}

{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 6 }}
{{- end -}}

    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
