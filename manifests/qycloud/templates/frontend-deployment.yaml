{{- $serverDomain := .Values.ingress.domain -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-frontend
  labels:
    app: {{ .Release.Name }}-frontend
    chart: {{ template "qycloud.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  type: {{ .Values.frontend.service.type }}
  ports:
    - port: {{ .Values.frontend.service.port }}
      targetPort: {{ .Values.frontend.service.port }}
  selector:
    app: {{ .Release.Name }}-frontend
    release: {{ .Release.Name }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-frontend
  labels:
    app: {{ .Release.Name }}-frontend
    chart: {{ template "qycloud.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-frontend
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-frontend
        release: {{ .Release.Name }}
    spec:
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
      {{- range .Values.ingress.hosts }}
          - {{ . }}.{{ $serverDomain }}
      {{- end }}

      initContainers:
        - name: source
          image: "{{ .Values.frontend.source.image }}:{{ .Values.frontend.source.imageTag }}"
          imagePullPolicy: {{ .Values.frontend.source.pullPolicy }}
          volumeMounts:
            - name: saas-home
              mountPath: "/opt"

          env:
          - name: UPDATE
            value: {{ .Values.frontend.source.update | quote }}

        - name: config
          image: busybox
          command: ['sh', '-c', 'ls /opt; cp -f /opt/config/development.js /opt/node-saas/config']
          volumeMounts:
            - name: saas-home
              mountPath: "/opt"
            - name: saas-config
              mountPath: "/opt/config"

        - name: init-beanstalkd
          image: busybox
          command: ['sh', '-c', 'until nslookup {{ .Release.Name }}-beanstalkd; do echo waiting for beanstalkd; sleep 2; done;']

        - name: init-mongo
          image: busybox
          command: ['sh', '-c', 'until nslookup {{ .Release.Name }}-mongo; do echo waiting for mongo; sleep 2; done;']

        - name: init-mysql
          image: busybox
          command: ['sh', '-c', 'until nslookup {{ .Release.Name }}-mysql; do echo waiting for mysql; sleep 2; done;']

        - name: init-redis
          image: busybox
          command: ['sh', '-c', 'until nslookup {{ .Release.Name }}-redis; do echo waiting for redis; sleep 2; done;']

      containers:
        - name: nginx
          image: "{{ .Values.frontend.nginx.image }}:{{ .Values.frontend.nginx.imageTag }}"
          imagePullPolicy: {{ .Values.frontend.nginx.pullPolicy }}
          ports:
          - containerPort: {{ .Values.frontend.nginx.containerPort }}
          resources:
{{ toYaml .Values.frontend.resources | indent 12 }}
          volumeMounts:
            - name: saas-home
              mountPath: "/opt"
            - name: saas-config
              mountPath: "/etc/nginx/nginx.conf"
              subPath: "nginx.conf"
            - name: saas-config
              mountPath: "/etc/nginx/conf.d/aysaas.conf"
              subPath: "aysaas.conf"

        - name: php
          image: "{{ .Values.frontend.php.image }}:{{ .Values.frontend.php.imageTag }}"
          imagePullPolicy: {{ .Values.frontend.php.pullPolicy }}
          ports:
          - containerPort: {{ .Values.frontend.php.containerPort }}
            name: php-fastcgi
          - containerPort: {{ .Values.frontend.node.containerPort }}
            name: node-cgi

          env:
          - name: MYSQL_ROOT_PASSWORD
            value: {{ .Values.mysql.env.rootPassword | quote }}
          - name: QUEUE_HOST
            value: {{ .Release.Name }}-beanstalkd
          - name: MONGO_HOST
            value: {{ .Release.Name }}-mongo
          - name: MYSQL_HOST
            value: {{ .Release.Name }}-mysql
          - name: REDIS_HOST
            value: {{ .Release.Name }}-redis
          - name: APP_NAME
            value: {{ .Release.Name }}
          resources:
{{ toYaml .Values.frontend.resources | indent 12 }}
          volumeMounts:
            - name: saas-home
              mountPath: "/opt"


      volumes:
{{- if .Values.persistence.volumes }}
{{ toYaml .Values.persistence.volumes | indent 6 }}
{{- end }}
      - name: saas-config
        configMap:
          name: {{ .Release.Name }}-config
      - name: saas-home
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default .Release.Name }}
      {{- else }}
        emptyDir: {}
      {{- end -}}

{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 6 }}
{{- end -}}

    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
