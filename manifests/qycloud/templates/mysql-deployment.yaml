apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-mysql
  labels:
    app: {{ .Release.Name }}-mysql
    chart: {{ template "qycloud.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  type: {{ .Values.mysql.service.type }}
  ports:
    - port: {{ .Values.mysql.service.port }}
      targetPort: {{ .Values.mysql.containerPort }}
  selector:
    app: {{ .Release.Name }}-mysql
    release: {{ .Release.Name }}

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mysql
  labels:
    app: {{ .Release.Name }}-mysql
    chart: {{ template "qycloud.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.mysql.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-mysql
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-mysql
        release: {{ .Release.Name }}
    spec:
    {{- if .Values.persistence.mysql.enabled }}
      initContainers:
        - name: mysqldata
          image: "{{ .Values.mysql.image }}:{{ .Values.mysql.imageTag }}"
          imagePullPolicy: {{ .Values.mysql.pullPolicy }}
          command: ['sh', '-c', '[ ! -d /opt/mysql ] && cp -a /var/lib/mysql/. /opt/']
          volumeMounts:
            - name: data
              mountPath: "/opt"
    {{- end }}
      containers:
        - name: mysql
          image: "{{ .Values.mysql.image }}:{{ .Values.mysql.imageTag }}"
          imagePullPolicy: {{ .Values.mysql.pullPolicy }}

          ports:
          - containerPort: {{ .Values.mysql.containerPort }}

          resources:
{{ toYaml .Values.mysql.resources | indent 12 }}
          volumeMounts:
            - name: data
              mountPath: "/var/lib/mysql"

      volumes:
      {{- if .Values.persistence.mysql.volumes }}
{{ toYaml .Values.persistence.mysql.volumes | indent 6 }}
      {{- end }}
      - name: data
      {{- if .Values.persistence.mysql.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.mysql.existingClaim | default (printf "%s-%s" .Release.Name "mysql") }}
      {{- else }}
        emptyDir: {}
      {{ end }}


    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 6 }}
    {{- end }}

    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}

    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}

    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
